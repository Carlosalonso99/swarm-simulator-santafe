<?xml version="1.0" ?>
<%camera_near = 0.1%>
<%camera_far = 20%>
<%camera_fov = 1.04719755%>
<%camera_aspect_ratio = 1.778%>
<sdf version="1.5">
  <world name="default">
    <!-- Anchor our GPS sensors to a real place: Camp Roberts
         http://www.lat-long.com/Latitude-Longitude-2512404-California-Camp_Roberts.html -->
    <spherical_coordinates>
      <latitude_deg>35.7753257</latitude_deg>
      <longitude_deg>-120.774063</longitude_deg>
      <elevation>208</elevation>
      <heading_deg>0</heading_deg>
    </spherical_coordinates>

    <scene>
      <shadows>false</shadows>
      <ambient>1 1 1 1</ambient>
    </scene>

    <physics type="ode">
      <ode>
        <solver>
          <type>world</type>
        </solver>
      </ode>
      <max_step_size>0.01</max_step_size>
      <real_time_update_rate>100</real_time_update_rate>
    </physics>

    <!-- The lost person -->
    <model name="lost_person">
      <pose>100 100 0.5 0 0 0</pose>
      <link name="link">
        <kinematic>true</kinematic>
        <collision name="collision">
          <geometry>
            <box>
              <size>1 1 1</size>
            </box>
          </geometry>
          <surface>
            <friction>
              <ode>
                <mu>0.0</mu>
                <mu2>0.0</mu2>
              </ode>
            </friction>
          </surface>
        </collision>
        <visual name="visual">
          <geometry>
            <box>
              <size>1 1 1</size>
            </box>
          </geometry>
        </visual>

        <visual name="visual_ul">
          <pose>0.5 0.5 0.5 0 0 0</pose>
          <geometry>
            <sphere>
              <radius>.04</radius>
            </sphere>
          </geometry>
          <material>
            <script>
              <name>Gazebo/Red</name>
            </script>
          </material>
        </visual>
        <visual name="visual_ur">
          <pose>0.5 -0.5 0.5 0 0 0</pose>
          <geometry>
            <sphere>
              <radius>.04</radius>
            </sphere>
          </geometry>
          <material>
            <script>
              <name>Gazebo/Green</name>
            </script>
          </material>
        </visual>
        <visual name="visual_lr">
          <pose>-0.5 -0.5 0.5 0 0 0</pose>
          <geometry>
            <sphere>
              <radius>.04</radius>
            </sphere>
          </geometry>
          <material>
            <script>
              <name>Gazebo/Blue</name>
            </script>
          </material>
        </visual>
        <visual name="visual_ll">
          <pose>-0.5 0.5 0.5 0 0 0</pose>
          <geometry>
            <sphere>
              <radius>.04</radius>
            </sphere>
          </geometry>
          <material>
            <script>
              <name>Gazebo/Yellow</name>
            </script>
          </material>
        </visual>
      </link>

      <plugin name="random" filename="libRandomVelocityPlugin.so">
        <link>link</link>
        <initial_velocity>0 0.2 0</initial_velocity>
        <velocity_factor>0.5</velocity_factor>
        <update_period>10</update_period>
        <min_z>0</min_z>
        <max_z>0</max_z>
      </plugin>
   </model>

   <!-- At 35 degrees latitude, 0.01 degrees is ~1km lat/long.
        So +/- 0.01 deg defines a ~2km X ~2km region. -->
   <% search_area = '''<swarm_search_area>
              <min_relative_latitude_deg>-0.01</min_relative_latitude_deg>
              <max_relative_latitude_deg>0.01</max_relative_latitude_deg>
              <min_relative_longitude_deg>-0.01</min_relative_longitude_deg>
              <max_relative_longitude_deg>0.01</max_relative_longitude_deg>
            </swarm_search_area>''' %>

    <% ground_battery = '''<battery>
      <!-- Capacity in mAh -->
      <capacity>110000</capacity>
      <!-- Consumption in mA -->
      <consumption>55000</consumption>
      <!-- A factor that should be between 0 and 1. A value of < 1 can be used
           to account for capacity loss in addition to the <consumption>. -->
      <consumption_factor>0.7</consumption_factor>
      </battery>'''%>

    <!-- Create the ground vehicles -->
    <% for y in 0..5 %>
      <% for x in 0..5 %>
        <% index = y * 6 + x %>
        <model name="ground_<%=index%>">
          <pose><%=x*0.4%> <%=y*0.4%> 0.05 0 0 0</pose>
          <link name="link">
            <sensor name="gps" type="gps">
              <gps>
                <position_sensing>
                  <horizontal>
                    <noise type="gaussian_quantized">
                      <mean>0</mean>
                      <stddev>4</stddev>
                      <bias_mean>0</bias_mean>
                      <bias_stddev>0</bias_stddev>
                      <precision>0.001</precision>
                    </noise>
                  </horizontal>
                  <vertical>
                    <noise type="gaussian_quantized">
                      <mean>0</mean>
                      <stddev>8</stddev>
                      <bias_mean>0</bias_mean>
                      <bias_stddev>0</bias_stddev>
                      <precision>0.01</precision>
                    </noise>
                  </vertical>
                </position_sensing>
                <velocity_sensing>
                  <horizontal>
                    <noise type="gaussian_quantized">
                      <mean>0</mean>
                      <stddev>4</stddev>
                      <bias_mean>0</bias_mean>
                      <bias_stddev>0</bias_stddev>
                      <precision>0.001</precision>
                    </noise>
                  </horizontal>
                  <vertical>
                    <noise type="gaussian_quantized">
                      <mean>0</mean>
                      <stddev>8</stddev>
                      <bias_mean>0</bias_mean>
                      <bias_stddev>0</bias_stddev>
                      <precision>0.01</precision>
                    </noise>
                  </vertical>
                </velocity_sensing>
              </gps>
              <always_on>1</always_on>
            </sensor>

            <sensor name="imu" type="imu">
              <imu>
                <angular_velocity>
                  <x>
                    <noise type="gaussian">
                      <mean>0</mean>
                      <stddev>0.0002</stddev>
                      <bias_mean>7.5e-06</bias_mean>
                      <bias_stddev>8e-07</bias_stddev>
                    </noise>
                  </x>
                  <y>
                    <noise type="gaussian">
                      <mean>0</mean>
                      <stddev>0.0002</stddev>
                      <bias_mean>7.5e-06</bias_mean>
                      <bias_stddev>8e-07</bias_stddev>
                    </noise>
                  </y>
                  <z>
                    <noise type="gaussian">
                      <mean>0</mean>
                      <stddev>0.0002</stddev>
                      <bias_mean>7.5e-06</bias_mean>
                      <bias_stddev>8e-07</bias_stddev>
                    </noise>
                  </z>
                </angular_velocity>
                <linear_acceleration>
                  <x>
                    <noise type="gaussian">
                      <mean>0</mean>
                      <stddev>0.0002</stddev>
                      <bias_mean>7.5e-06</bias_mean>
                      <bias_stddev>8e-07</bias_stddev>
                    </noise>
                  </x>
                  <y>
                    <noise type="gaussian">
                      <mean>0</mean>
                      <stddev>0.0002</stddev>
                      <bias_mean>7.5e-06</bias_mean>
                      <bias_stddev>8e-07</bias_stddev>
                    </noise>
                  </y>
                  <z>
                    <noise type="gaussian">
                      <mean>0</mean>
                      <stddev>0.0002</stddev>
                      <bias_mean>7.5e-06</bias_mean>
                      <bias_stddev>8e-07</bias_stddev>
                    </noise>
                  </z>
                </linear_acceleration>
              </imu>
              <always_on>1</always_on>
            </sensor>

            <sensor name="camera" type="logical_camera">
              <logical_camera>
                <near><%=camera_near%></near>
                <far><%=camera_far%></far>
                <horizontal_fov><%=camera_fov%></horizontal_fov>
                <aspect_ratio><%=camera_aspect_ratio%></aspect_ratio>
              </logical_camera>
              <visualize>false</visualize>
              <always_on>true</always_on>
            </sensor>

            <kinematic>true</kinematic>
            <gravity>false</gravity>
            <collision name="collision">
              <geometry>
                <box>
                  <size>0.2 .1 .1</size>
                </box>
              </geometry>
            </collision>
            <visual name="visual">
              <geometry>
                <box>
                  <size>0.2 .1 .1</size>
                </box>
              </geometry>
            </visual>
            <visual name="visual_front">
              <pose>0.07 0 0.04 0 0 0</pose>
              <geometry>
                <sphere>
                  <radius>.04</radius>
                </sphere>
              </geometry>
              <material>
                <script>
                  <name>Gazebo/Red</name>
                </script>
              </material>
            </visual>
          </link>

          <!-- Load the plugin to control this robot -->
          <plugin name="swarm_controller_<%=index%>"
                  filename="libTeamControllerPlugin.so">
            <type>ground</type>
            <camera>link::camera</camera>
            <gps>link::gps</gps>
            <imu>link::imu</imu>
            <address>192.168.2.<%=index+1%></address>
            <num_messages>1</num_messages>
            <%=search_area%>
            <%=ground_battery%>
          </plugin>
        </model>
      <% end %>
    <% end %>

    <!-- The base of operations -->
    <model name="boo">
      <pose>-5 -5 0.5 0 0 0</pose>
      <static>true</static>
      <link name="link">
         <kinematic>true</kinematic>
         <collision name="collision">
           <geometry>
             <box>
               <size>1 1 1</size>
             </box>
           </geometry>
           <surface>
             <friction>
               <ode>
                 <mu>0.0</mu>
                 <mu2>0.0</mu2>
               </ode>
             </friction>
           </surface>
         </collision>
         <visual name="visual">
           <geometry>
             <box>
               <size>1 1 1</size>
             </box>
           </geometry>
         </visual>
       </link>

       <plugin name="boo" filename="libSwarmBooPlugin.so">
         <lost_person_model>lost_person</lost_person_model>
         <!-- Do not change this address -->
         <address>boo</address>
         <type>ground</type>
         <%=search_area%>
       </plugin>
    </model>

    <!-- Load the plugin to deliver all the messages inside the swarm -->
    <plugin name="swarm_broker" filename="libSwarmBrokerPlugin.so">
      <comms_model>
        <neighbor_distance_min>0.0</neighbor_distance_min>
        <neighbor_distance_max>250.0</neighbor_distance_max>
        <neighbor_distance_penalty_tree>200.0</neighbor_distance_penalty_tree>
        <comms_distance_min>0.0</comms_distance_min>
        <comms_distance_max>250.0</comms_distance_max>
        <comms_distance_penalty_tree>200.0</comms_distance_penalty_tree>
        <comms_drop_probability_min>0.0</comms_drop_probability_min>
        <comms_drop_probability_max>0.05</comms_drop_probability_max>
        <comms_outage_probability>0.1</comms_outage_probability>
        <comms_outage_duration_min>1.0</comms_outage_duration_min>
        <comms_outage_duration_max>2.0</comms_outage_duration_max>
      </comms_model>
    </plugin>

    <model name="ground_plane">
      <static>true</static>
      <link name="link">
        <collision name="collision">
          <geometry>
            <plane>
              <normal>0 0 1</normal>
              <size>10000 10000</size>
            </plane>
          </geometry>
          <surface>
            <friction>
              <ode>
                <mu>100</mu>
                <mu2>50</mu2>
              </ode>
            </friction>
          </surface>
        </collision>
        <visual name="visual">
          <cast_shadows>false</cast_shadows>
          <geometry>
            <plane>
              <normal>0 0 1</normal>
              <size>10000 10000</size>
            </plane>
          </geometry>
          <material>
            <script>
              <uri>file://media/materials/scripts/gazebo.material</uri>
              <name>Gazebo/Grey</name>
            </script>
          </material>
        </visual>
      </link>
    </model>

  </world>
</sdf>

