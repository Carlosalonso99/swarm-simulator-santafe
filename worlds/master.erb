
<%
# Default parameters.
def default()
  $ground_count = 10
  $fixed_count = 10
  $rotor_count = 10

  # Camera with 20mm focal length projected onto 35mm film has a field
  # of view of 1.4656 radians (~84 degrees).
  $camera_near_rotor = 0.1
  $camera_far_rotor = 50 
  $camera_fov_rotor = 1.4656
  $camera_aspect_ratio_rotor = 1.778

  # Camera with 50mm focal length projected onto 35mm film has a field
  # of view of 0.6911 radians (~40 degrees).
  $camera_near_ground = 0.1
  $camera_far_ground = 100 
  $camera_fov_ground = 0.6911
  $camera_aspect_ratio_ground = 1.778

  # Camera with 200mm focal length projected onto 35mm film has a field
  # of view of 0.1795 radians (~10 degrees).
  $camera_near_fixed = 0.1
  $camera_far_fixed = 200
  $camera_fov_fixed = 0.1795
  $camera_aspect_ratio_fixed = 1.778

  $lost_person_x = 1000
  $lost_person_y = 1000
  $latitude_deg = 35.7753257
  $longitude_deg = -120.774063
  $elevation = 208
  $terrain_file = ''

  # Comms model parameters
  $neighbor_distance_min = 0.0
  $neighbor_distance_max = 250.0
  $neighbor_distance_penalty_tree = 200.0
  $comms_distance_min = 0.0
  $comms_distance_max = 250.0
  $comms_distance_penalty_tree = 200.0
  $comms_drop_probability_min = 0.0
  $comms_drop_probability_max = 0.05
  $comms_outage_probability = 0.1
  $comms_outage_duration_min = 1.0
  $comms_outage_duration_max = 2.0
  $comms_data_rate_max = 54000000
end

# complete.world
def complete()
  $terrain_file = 'terrain_model_1.sdf.erb'
end

# How to a new world file:
# 1. Create a function that matches the name of your world file
#    without ".world". Modify the default parameters for your new world file.
#    E.g.:
#    def complete()
#      $terrain_file = 'terrain_model_1.sdf.erb'
#    end
#
# 2. Add a new entry to the hash "h", where:
#      - The key should be the complete world file name.
#      - The value should be the function that you created in step (1).
#    E.g.:
#    h["complete.world"] = method(:complete)
#
# 3. Add your new world file to worlds/CMakeLists.txt inside this block:
#       set (generated_master_world_files
#         complete.world
#         <YOUR_NEW_WORLD_FILE>
#       )

# Generate a Gazebo world file.
# Params:
# +_world_file+:: World file to be generated.
def generate_worlds(_world_file)

  h = Hash.new
  h["complete.world"] = method(:complete)

  # Load default parameters.
  default()

  f = h[_world_file]
  f.call
  ERB.new(File.read('template.world.erb'),
          nil, nil, "_world").result(binding)
end
%>

<%=
# We use an environment variable for specifying the world file to generate.
generate_worlds( ENV['erb_gazebo_world_file'] )
%>
