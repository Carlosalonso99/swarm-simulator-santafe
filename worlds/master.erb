
<%
# Default parameters.
def default()
  $ground_count = 10
  $fixed_count = 10
  $rotor_count = 10
  $camera_near = 0.1
  $camera_far = 20
  $camera_fov = 1.04719755
  $camera_aspect_ratio = 1.778
  $lost_person_x = 1000
  $lost_person_y = 1000
  $latitude_deg = 35.7753257
  $longitude_deg = -120.774063
  $elevation = 208

  # Search area (2km x 2km)
  $min_relative_latitude_deg = -0.01
  $max_relative_latitude_deg = 0.01
  $min_relative_longitude_deg = -0.01
  $max_relative_longitude_deg = 0.01

  # Terrain and environment
  $terrain_file = ''
  $vegetation_file = ''

  # Comms model parameters
  $neighbor_distance_min = 0.0
  $neighbor_distance_max = 250.0
  $neighbor_distance_penalty_tree = 200.0
  $comms_distance_min = 0.0
  $comms_distance_max = 250.0
  $comms_distance_penalty_tree = 200.0
  $comms_drop_probability_min = 0.0
  $comms_drop_probability_max = 0.05
  $comms_outage_probability = 0.1
  $comms_outage_duration_min = 1.0
  $comms_outage_duration_max = 2.0
  $comms_data_rate_max = 54000000
end

# complete.world
def complete()
  $terrain_file = 'terrain_model_1.sdf.erb'
  $vegetation_file = 'vegetation_01.sdf.erb'
end

# final_01.world
def final_01()
  $terrain_file = 'terrain_camp_roberts.sdf.erb'
  $vegetation_file = 'vegetation_camp_roberts_low.sdf.erb'
end

# final_02.world
def final_02()
  $terrain_file = 'terrain_camp_roberts.sdf.erb'
  $vegetation_file = 'vegetation_camp_roberts_med.sdf.erb'
end

# final_03.world
def final_03()
  $terrain_file = 'terrain_camp_roberts.sdf.erb'
  $vegetation_file = 'vegetation_camp_roberts_high.sdf.erb'
end

# final_04.world
def final_04()
  # Search area (10km x 10km)
  $min_relative_latitude_deg = -0.05
  $max_relative_latitude_deg = 0.05
  $min_relative_longitude_deg = -0.05
  $max_relative_longitude_deg = 0.05

  $terrain_file = 'terrain_camp_roberts.sdf.erb'
  $vegetation_file = 'vegetation_camp_roberts_low.sdf.erb'
end

# final_05.world
def final_05()
  # Search area (10km x 10km)
  $min_relative_latitude_deg = -0.05
  $max_relative_latitude_deg = 0.05
  $min_relative_longitude_deg = -0.05
  $max_relative_longitude_deg = 0.05

  $terrain_file = 'terrain_camp_roberts.sdf.erb'
  $vegetation_file = 'vegetation_camp_roberts_med.sdf.erb'
end

# final_06.world
def final_06()
  # Search area (10km x 10km)
  $min_relative_latitude_deg = -0.05
  $max_relative_latitude_deg = 0.05
  $min_relative_longitude_deg = -0.05
  $max_relative_longitude_deg = 0.05

  $terrain_file = 'terrain_camp_roberts.sdf.erb'
  $vegetation_file = 'vegetation_camp_roberts_high.sdf.erb'
end

# final_07.world
def final_07()
  # Search area (20km x 20km)
  $min_relative_latitude_deg = -0.1
  $max_relative_latitude_deg = 0.1
  $min_relative_longitude_deg = -0.1
  $max_relative_longitude_deg = 0.1

  $terrain_file = 'terrain_camp_roberts.sdf.erb'
  $vegetation_file = 'vegetation_camp_roberts_low.sdf.erb'
end

# final_08.world
def final_08()
  # Search area (20km x 20km)
  $min_relative_latitude_deg = -0.1
  $max_relative_latitude_deg = 0.1
  $min_relative_longitude_deg = -0.1
  $max_relative_longitude_deg = 0.1

  $terrain_file = 'terrain_camp_roberts.sdf.erb'
  $vegetation_file = 'vegetation_camp_roberts_med.sdf.erb'
end

# final_09.world
def final_09()
  # Search area (20km x 20km)
  $min_relative_latitude_deg = -0.1
  $max_relative_latitude_deg = 0.1
  $min_relative_longitude_deg = -0.1
  $max_relative_longitude_deg = 0.1

  $terrain_file = 'terrain_camp_roberts.sdf.erb'
  $vegetation_file = 'vegetation_camp_roberts_high.sdf.erb'
end

# How to a new world file:
# 1. Create a function that matches the name of your world file
#    without ".world". Modify the default parameters for your new world file.
#    E.g.:
#    def complete()
#      $terrain_file = 'terrain_model_1.sdf.erb'
#    end
#
# 2. Add a new entry to the hash "h", where:
#      - The key should be the complete world file name.
#      - The value should be the function that you created in step (1).
#    E.g.:
#    h["complete.world"] = method(:complete)
#
# 3. Add your new world file to worlds/CMakeLists.txt inside this block:
#       set (generated_master_world_files
#         complete.world
#         <YOUR_NEW_WORLD_FILE>
#       )

# Generate a Gazebo world file.
# Params:
# +_world_file+:: World file to be generated.
def generate_worlds(_world_file)

  h = Hash.new
  h["complete.world"] = method(:complete)
  h["final_01.world"] = method(:final_01)
  h["final_02.world"] = method(:final_02)
  h["final_03.world"] = method(:final_03)
  h["final_04.world"] = method(:final_04)
  h["final_05.world"] = method(:final_05)
  h["final_06.world"] = method(:final_06)
  h["final_07.world"] = method(:final_07)
  h["final_08.world"] = method(:final_08)
  h["final_09.world"] = method(:final_09)

  # Load default parameters.
  default()

  f = h[_world_file]
  f.call
  ERB.new(File.read('template.world.erb'),
          nil, nil, "_world").result(binding)
end
%>

<%=
# We use an environment variable for specifying the world file to generate.
generate_worlds( ENV['erb_gazebo_world_file'] )
%>