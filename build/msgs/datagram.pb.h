// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datagram.proto

#ifndef PROTOBUF_datagram_2eproto__INCLUDED
#define PROTOBUF_datagram_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#pragma GCC system_header
#include <memory>
#include <swarm/Helpers.hh>
// @@protoc_insertion_point(includes)

namespace swarm {
namespace msgs {

// Internal implementation detail -- do not call these.
void IGNITION_MSGS_VISIBLE protobuf_AddDesc_datagram_2eproto();
void protobuf_AssignDesc_datagram_2eproto();
void protobuf_ShutdownFile_datagram_2eproto();

class Datagram;

// ===================================================================

class IGNITION_MSGS_VISIBLE Datagram : public ::google::protobuf::Message {
 public:
  Datagram();
  virtual ~Datagram();

  Datagram(const Datagram& from);

  inline Datagram& operator=(const Datagram& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Datagram& default_instance();

  void Swap(Datagram* other);

  // implements Message ----------------------------------------------

  Datagram* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Datagram& from);
  void MergeFrom(const Datagram& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string src_address = 1;
  inline bool has_src_address() const;
  inline void clear_src_address();
  static const int kSrcAddressFieldNumber = 1;
  inline const ::std::string& src_address() const;
  inline void set_src_address(const ::std::string& value);
  inline void set_src_address(const char* value);
  inline void set_src_address(const char* value, size_t size);
  inline ::std::string* mutable_src_address();
  inline ::std::string* release_src_address();
  inline void set_allocated_src_address(::std::string* src_address);

  // required string dst_address = 2;
  inline bool has_dst_address() const;
  inline void clear_dst_address();
  static const int kDstAddressFieldNumber = 2;
  inline const ::std::string& dst_address() const;
  inline void set_dst_address(const ::std::string& value);
  inline void set_dst_address(const char* value);
  inline void set_dst_address(const char* value, size_t size);
  inline ::std::string* mutable_dst_address();
  inline ::std::string* release_dst_address();
  inline void set_allocated_dst_address(::std::string* dst_address);

  // required uint32 dst_port = 3;
  inline bool has_dst_port() const;
  inline void clear_dst_port();
  static const int kDstPortFieldNumber = 3;
  inline ::google::protobuf::uint32 dst_port() const;
  inline void set_dst_port(::google::protobuf::uint32 value);

  // required string data = 4;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 4;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const char* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // repeated string recipients = 5;
  inline int recipients_size() const;
  inline void clear_recipients();
  static const int kRecipientsFieldNumber = 5;
  inline const ::std::string& recipients(int index) const;
  inline ::std::string* mutable_recipients(int index);
  inline void set_recipients(int index, const ::std::string& value);
  inline void set_recipients(int index, const char* value);
  inline void set_recipients(int index, const char* value, size_t size);
  inline ::std::string* add_recipients();
  inline void add_recipients(const ::std::string& value);
  inline void add_recipients(const char* value);
  inline void add_recipients(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& recipients() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_recipients();

  // @@protoc_insertion_point(class_scope:swarm.msgs.Datagram)
 private:
  inline void set_has_src_address();
  inline void clear_has_src_address();
  inline void set_has_dst_address();
  inline void clear_has_dst_address();
  inline void set_has_dst_port();
  inline void clear_has_dst_port();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* src_address_;
  ::std::string* dst_address_;
  ::std::string* data_;
  ::google::protobuf::RepeatedPtrField< ::std::string> recipients_;
  ::google::protobuf::uint32 dst_port_;
  friend void IGNITION_MSGS_VISIBLE protobuf_AddDesc_datagram_2eproto();
  friend void protobuf_AssignDesc_datagram_2eproto();
  friend void protobuf_ShutdownFile_datagram_2eproto();

  void InitAsDefaultInstance();
  static Datagram* default_instance_;
};
// ===================================================================


// ===================================================================

// Datagram

// required string src_address = 1;
inline bool Datagram::has_src_address() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Datagram::set_has_src_address() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Datagram::clear_has_src_address() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Datagram::clear_src_address() {
  if (src_address_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    src_address_->clear();
  }
  clear_has_src_address();
}
inline const ::std::string& Datagram::src_address() const {
  // @@protoc_insertion_point(field_get:swarm.msgs.Datagram.src_address)
  return *src_address_;
}
inline void Datagram::set_src_address(const ::std::string& value) {
  set_has_src_address();
  if (src_address_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    src_address_ = new ::std::string;
  }
  src_address_->assign(value);
  // @@protoc_insertion_point(field_set:swarm.msgs.Datagram.src_address)
}
inline void Datagram::set_src_address(const char* value) {
  set_has_src_address();
  if (src_address_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    src_address_ = new ::std::string;
  }
  src_address_->assign(value);
  // @@protoc_insertion_point(field_set_char:swarm.msgs.Datagram.src_address)
}
inline void Datagram::set_src_address(const char* value, size_t size) {
  set_has_src_address();
  if (src_address_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    src_address_ = new ::std::string;
  }
  src_address_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:swarm.msgs.Datagram.src_address)
}
inline ::std::string* Datagram::mutable_src_address() {
  set_has_src_address();
  if (src_address_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    src_address_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:swarm.msgs.Datagram.src_address)
  return src_address_;
}
inline ::std::string* Datagram::release_src_address() {
  clear_has_src_address();
  if (src_address_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = src_address_;
    src_address_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Datagram::set_allocated_src_address(::std::string* src_address) {
  if (src_address_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete src_address_;
  }
  if (src_address) {
    set_has_src_address();
    src_address_ = src_address;
  } else {
    clear_has_src_address();
    src_address_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:swarm.msgs.Datagram.src_address)
}

// required string dst_address = 2;
inline bool Datagram::has_dst_address() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Datagram::set_has_dst_address() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Datagram::clear_has_dst_address() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Datagram::clear_dst_address() {
  if (dst_address_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dst_address_->clear();
  }
  clear_has_dst_address();
}
inline const ::std::string& Datagram::dst_address() const {
  // @@protoc_insertion_point(field_get:swarm.msgs.Datagram.dst_address)
  return *dst_address_;
}
inline void Datagram::set_dst_address(const ::std::string& value) {
  set_has_dst_address();
  if (dst_address_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dst_address_ = new ::std::string;
  }
  dst_address_->assign(value);
  // @@protoc_insertion_point(field_set:swarm.msgs.Datagram.dst_address)
}
inline void Datagram::set_dst_address(const char* value) {
  set_has_dst_address();
  if (dst_address_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dst_address_ = new ::std::string;
  }
  dst_address_->assign(value);
  // @@protoc_insertion_point(field_set_char:swarm.msgs.Datagram.dst_address)
}
inline void Datagram::set_dst_address(const char* value, size_t size) {
  set_has_dst_address();
  if (dst_address_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dst_address_ = new ::std::string;
  }
  dst_address_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:swarm.msgs.Datagram.dst_address)
}
inline ::std::string* Datagram::mutable_dst_address() {
  set_has_dst_address();
  if (dst_address_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dst_address_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:swarm.msgs.Datagram.dst_address)
  return dst_address_;
}
inline ::std::string* Datagram::release_dst_address() {
  clear_has_dst_address();
  if (dst_address_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = dst_address_;
    dst_address_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Datagram::set_allocated_dst_address(::std::string* dst_address) {
  if (dst_address_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete dst_address_;
  }
  if (dst_address) {
    set_has_dst_address();
    dst_address_ = dst_address;
  } else {
    clear_has_dst_address();
    dst_address_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:swarm.msgs.Datagram.dst_address)
}

// required uint32 dst_port = 3;
inline bool Datagram::has_dst_port() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Datagram::set_has_dst_port() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Datagram::clear_has_dst_port() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Datagram::clear_dst_port() {
  dst_port_ = 0u;
  clear_has_dst_port();
}
inline ::google::protobuf::uint32 Datagram::dst_port() const {
  // @@protoc_insertion_point(field_get:swarm.msgs.Datagram.dst_port)
  return dst_port_;
}
inline void Datagram::set_dst_port(::google::protobuf::uint32 value) {
  set_has_dst_port();
  dst_port_ = value;
  // @@protoc_insertion_point(field_set:swarm.msgs.Datagram.dst_port)
}

// required string data = 4;
inline bool Datagram::has_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Datagram::set_has_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Datagram::clear_has_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Datagram::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& Datagram::data() const {
  // @@protoc_insertion_point(field_get:swarm.msgs.Datagram.data)
  return *data_;
}
inline void Datagram::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:swarm.msgs.Datagram.data)
}
inline void Datagram::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:swarm.msgs.Datagram.data)
}
inline void Datagram::set_data(const char* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:swarm.msgs.Datagram.data)
}
inline ::std::string* Datagram::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:swarm.msgs.Datagram.data)
  return data_;
}
inline ::std::string* Datagram::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Datagram::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:swarm.msgs.Datagram.data)
}

// repeated string recipients = 5;
inline int Datagram::recipients_size() const {
  return recipients_.size();
}
inline void Datagram::clear_recipients() {
  recipients_.Clear();
}
inline const ::std::string& Datagram::recipients(int index) const {
  // @@protoc_insertion_point(field_get:swarm.msgs.Datagram.recipients)
  return recipients_.Get(index);
}
inline ::std::string* Datagram::mutable_recipients(int index) {
  // @@protoc_insertion_point(field_mutable:swarm.msgs.Datagram.recipients)
  return recipients_.Mutable(index);
}
inline void Datagram::set_recipients(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:swarm.msgs.Datagram.recipients)
  recipients_.Mutable(index)->assign(value);
}
inline void Datagram::set_recipients(int index, const char* value) {
  recipients_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:swarm.msgs.Datagram.recipients)
}
inline void Datagram::set_recipients(int index, const char* value, size_t size) {
  recipients_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:swarm.msgs.Datagram.recipients)
}
inline ::std::string* Datagram::add_recipients() {
  return recipients_.Add();
}
inline void Datagram::add_recipients(const ::std::string& value) {
  recipients_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:swarm.msgs.Datagram.recipients)
}
inline void Datagram::add_recipients(const char* value) {
  recipients_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:swarm.msgs.Datagram.recipients)
}
inline void Datagram::add_recipients(const char* value, size_t size) {
  recipients_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:swarm.msgs.Datagram.recipients)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Datagram::recipients() const {
  // @@protoc_insertion_point(field_list:swarm.msgs.Datagram.recipients)
  return recipients_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Datagram::mutable_recipients() {
  // @@protoc_insertion_point(field_mutable_list:swarm.msgs.Datagram.recipients)
  return &recipients_;
}


typedef std::shared_ptr<swarm::msgs::Datagram> DatagramPtr;
// @@protoc_insertion_point(namespace_scope)

}  // namespace msgs
}  // namespace swarm

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

typedef const std::shared_ptr<swarm::msgs::Datagram const> ConstDatagramPtr;
// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_datagram_2eproto__INCLUDED
