// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datagram.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "datagram.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
#pragma GCC diagnostic ignored "-Wshadow"
#pragma GCC diagnostic ignored "-Wswitch-default"
// @@protoc_insertion_point(includes)

namespace swarm {
namespace msgs {

namespace {

const ::google::protobuf::Descriptor* Datagram_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Datagram_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_datagram_2eproto() {
  protobuf_AddDesc_datagram_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "datagram.proto");
  GOOGLE_CHECK(file != NULL);
  Datagram_descriptor_ = file->message_type(0);
  static const int Datagram_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datagram, src_address_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datagram, dst_address_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datagram, dst_port_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datagram, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datagram, recipients_),
  };
  Datagram_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Datagram_descriptor_,
      Datagram::default_instance_,
      Datagram_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datagram, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datagram, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Datagram));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_datagram_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Datagram_descriptor_, &Datagram::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_datagram_2eproto() {
  delete Datagram::default_instance_;
  delete Datagram_reflection_;
}

void protobuf_AddDesc_datagram_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016datagram.proto\022\nswarm.msgs\"h\n\010Datagram"
    "\022\023\n\013src_address\030\001 \002(\t\022\023\n\013dst_address\030\002 \002"
    "(\t\022\020\n\010dst_port\030\003 \002(\r\022\014\n\004data\030\004 \002(\t\022\022\n\nre"
    "cipients\030\005 \003(\t", 134);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "datagram.proto", &protobuf_RegisterTypes);
  Datagram::default_instance_ = new Datagram();
  Datagram::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_datagram_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_datagram_2eproto {
  StaticDescriptorInitializer_datagram_2eproto() {
    protobuf_AddDesc_datagram_2eproto();
  }
} static_descriptor_initializer_datagram_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int Datagram::kSrcAddressFieldNumber;
const int Datagram::kDstAddressFieldNumber;
const int Datagram::kDstPortFieldNumber;
const int Datagram::kDataFieldNumber;
const int Datagram::kRecipientsFieldNumber;
#endif  // !_MSC_VER

Datagram::Datagram()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:swarm.msgs.Datagram)
}

void Datagram::InitAsDefaultInstance() {
}

Datagram::Datagram(const Datagram& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:swarm.msgs.Datagram)
}

void Datagram::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  src_address_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dst_address_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dst_port_ = 0u;
  data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Datagram::~Datagram() {
  // @@protoc_insertion_point(destructor:swarm.msgs.Datagram)
  SharedDtor();
}

void Datagram::SharedDtor() {
  if (src_address_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete src_address_;
  }
  if (dst_address_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete dst_address_;
  }
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (this != default_instance_) {
  }
}

void Datagram::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Datagram::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Datagram_descriptor_;
}

const Datagram& Datagram::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_datagram_2eproto();
  return *default_instance_;
}

Datagram* Datagram::default_instance_ = NULL;

Datagram* Datagram::New() const {
  return new Datagram;
}

void Datagram::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    if (has_src_address()) {
      if (src_address_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        src_address_->clear();
      }
    }
    if (has_dst_address()) {
      if (dst_address_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        dst_address_->clear();
      }
    }
    dst_port_ = 0u;
    if (has_data()) {
      if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        data_->clear();
      }
    }
  }
  recipients_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Datagram::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:swarm.msgs.Datagram)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string src_address = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_src_address()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->src_address().data(), this->src_address().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "src_address");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_dst_address;
        break;
      }

      // required string dst_address = 2;
      case 2: {
        if (tag == 18) {
         parse_dst_address:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dst_address()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dst_address().data(), this->dst_address().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dst_address");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_dst_port;
        break;
      }

      // required uint32 dst_port = 3;
      case 3: {
        if (tag == 24) {
         parse_dst_port:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dst_port_)));
          set_has_dst_port();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_data;
        break;
      }

      // required string data = 4;
      case 4: {
        if (tag == 34) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_recipients;
        break;
      }

      // repeated string recipients = 5;
      case 5: {
        if (tag == 42) {
         parse_recipients:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_recipients()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->recipients(this->recipients_size() - 1).data(),
            this->recipients(this->recipients_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "recipients");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_recipients;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:swarm.msgs.Datagram)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:swarm.msgs.Datagram)
  return false;
#undef DO_
}

void Datagram::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:swarm.msgs.Datagram)
  // required string src_address = 1;
  if (has_src_address()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->src_address().data(), this->src_address().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "src_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->src_address(), output);
  }

  // required string dst_address = 2;
  if (has_dst_address()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dst_address().data(), this->dst_address().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dst_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->dst_address(), output);
  }

  // required uint32 dst_port = 3;
  if (has_dst_port()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->dst_port(), output);
  }

  // required string data = 4;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->data(), output);
  }

  // repeated string recipients = 5;
  for (int i = 0; i < this->recipients_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->recipients(i).data(), this->recipients(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "recipients");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->recipients(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:swarm.msgs.Datagram)
}

::google::protobuf::uint8* Datagram::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:swarm.msgs.Datagram)
  // required string src_address = 1;
  if (has_src_address()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->src_address().data(), this->src_address().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "src_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->src_address(), target);
  }

  // required string dst_address = 2;
  if (has_dst_address()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dst_address().data(), this->dst_address().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dst_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->dst_address(), target);
  }

  // required uint32 dst_port = 3;
  if (has_dst_port()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->dst_port(), target);
  }

  // required string data = 4;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->data(), target);
  }

  // repeated string recipients = 5;
  for (int i = 0; i < this->recipients_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->recipients(i).data(), this->recipients(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "recipients");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->recipients(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:swarm.msgs.Datagram)
  return target;
}

int Datagram::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string src_address = 1;
    if (has_src_address()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->src_address());
    }

    // required string dst_address = 2;
    if (has_dst_address()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->dst_address());
    }

    // required uint32 dst_port = 3;
    if (has_dst_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->dst_port());
    }

    // required string data = 4;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->data());
    }

  }
  // repeated string recipients = 5;
  total_size += 1 * this->recipients_size();
  for (int i = 0; i < this->recipients_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->recipients(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Datagram::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Datagram* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Datagram*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Datagram::MergeFrom(const Datagram& from) {
  GOOGLE_CHECK_NE(&from, this);
  recipients_.MergeFrom(from.recipients_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_src_address()) {
      set_src_address(from.src_address());
    }
    if (from.has_dst_address()) {
      set_dst_address(from.dst_address());
    }
    if (from.has_dst_port()) {
      set_dst_port(from.dst_port());
    }
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Datagram::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Datagram::CopyFrom(const Datagram& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Datagram::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void Datagram::Swap(Datagram* other) {
  if (other != this) {
    std::swap(src_address_, other->src_address_);
    std::swap(dst_address_, other->dst_address_);
    std::swap(dst_port_, other->dst_port_);
    std::swap(data_, other->data_);
    recipients_.Swap(&other->recipients_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Datagram::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Datagram_descriptor_;
  metadata.reflection = Datagram_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace msgs
}  // namespace swarm

// @@protoc_insertion_point(global_scope)
